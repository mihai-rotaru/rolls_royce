Tasks
-------------------------------------------------------------------------
- load Shapes from file
- render Beziers as filled polygons ( FEEDBACK mode ?? )
- color manipulation
- load additional info from files:
    - stroke width
    - stroke color
    - fill color
- static FPS ( game loop )
-------------------------------------------------------------------------
- implement morphing
- color tools - classes to handle making a color lighter, saturation, etc
- PrimitiveList
o BezierPath: aggreate of BezierCurve
- BezierPath has a method for parsing .pov files
- BezierShape: aggregate of BezierPath's
- implement static FPS
o investigate boost regex'es
- read from .pov files into BezierPath
o debug flags ( BEZIER_PATH, OBJ_CREATION_DESTRUCTION, FUNCTION, REGEX )
- debug methods ( debug_cout )
o BezierPath: - implement: getMax/Min, rotate, move, scale
- distanceTo - later, not needed for animation
- rotate - later

Keep in mind
o use smart pointers
- use C++ exceptions
- use wide strings
x use floats instead of ints

Issues
x ensure rotation does not suffer from 'gravitation' ( as in cg_project_1 )
- make sure objects are not clipped when moving outside visible area ( as in cg_project_2 )
x resizing the window makes rotation erratic
- some bounding boxes for Beziers are not computed correctly

Infrastructure
x use waf to compile the multi-file project
o use trac
- waf option to statically link freeglut and libstdc++
- waf option to optimize the build
